<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--Style save Button -->
    <Style TargetType="{x:Type Button}" x:Key="saveButton">
        <Setter Property="FontFamily" Value="/Resources/Fonts/#Kiona"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="{StaticResource CD_Grey}"/>
        <Setter Property="Width" Value="280" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{StaticResource CD_Grey}" BorderThickness="1.5" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <!--Triggers for switching on hover -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource CD_LightBlueGrey}"/>
                            <Setter Property="Foreground" Value="{StaticResource CD_DarkTeal}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CD_DarkTeal}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MenuButton-->
    <Style TargetType="{x:Type Button}" x:Key="MenuButton">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{StaticResource CD_Black}"/>
        <Setter Property="Background" Value="{StaticResource CD_White}"/>
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Width" Value="280" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{StaticResource CD_Black}" BorderThickness="0,0,1,1" Background="{TemplateBinding Background}">
                        <!--MenuButton contains Horizontal StackPanel: [TEXT] [ARROW_IMAGE]-->
                        <StackPanel Orientation="Horizontal" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            <TextBlock Padding="10,0,0,0" Width="229" Text="{TemplateBinding Tag}" VerticalAlignment="Center" FontFamily="/Frontend;component/Resources/Fonts/#Roboto Lt"/>
                            <Image Name="Arrow" Source="{StaticResource left_arrow_b}" Width="50" Height="20" Stretch="Uniform" VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                    <!--Triggers for switching the arrow image. black to white on hover and focus-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Arrow" Property="Source"
                                        Value="{StaticResource left_arrow_t}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="Arrow" Property="Source"
                                        Value="{StaticResource left_arrow_w}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--Triggers for switching the MenuButton Background to #265b65 on hover and focus-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource CD_LightBlueGrey}"/>
                <Setter Property="Foreground" Value="{StaticResource CD_DarkTeal}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource CD_DarkTeal}"/>
                <Setter Property="Foreground" Value="{StaticResource CD_White}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--LogoutButton-->
    <Style TargetType="{x:Type Button}" x:Key="LogoutButton">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource CD_Black}"/>
        <Setter Property="Background" Value="{StaticResource CD_White}"/>
        <Setter Property="Width" Value="280" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{StaticResource CD_Black}" BorderThickness="0,0,0,1" Background="{TemplateBinding Background}" VerticalAlignment="Center">
                        <!--LogoutButton contains Horizontal StackPanel: [TEXT] [LOGOUT_IMAGE]-->
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <TextBlock Padding="0,28,0,0" Width="160" Height="80" Text="Abmelden" FontFamily="/Frontend;component/Resources/Fonts/#Roboto Lt" TextAlignment="Center" FontSize="24"/>
                            <Image Name="Logout" Source="{StaticResource logout_b}" Height="30" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Left" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--LogoButton-->
    <Style TargetType="{x:Type Button}" x:Key="LogoButton">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource CD_Black}"/>
        <Setter Property="Background" Value="{StaticResource CD_White}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{StaticResource CD_Black}" BorderThickness="0,0,0,1" Background="{TemplateBinding Background}" VerticalAlignment="Center">
                        <!--LogoButton contains Horizontal StackPanel: [LOGO_IMAGE] [TEXT] -->
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0">
                            <Image Name="StuPla" Source="{StaticResource stupla_logo_icon}" Height="70" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            <TextBlock Padding="0,21,0,0" Width="120" Height="80" Text="StuPla" FontFamily="/Frontend;component/Resources/Fonts/#Roboto Lt" TextAlignment="Center" FontSize="32"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--SelectionBarElement-->
    <Style TargetType="{x:Type Button}" x:Key="SelectionBarButton">
        <Setter Property="Foreground" Value="{StaticResource CD_White}"/>
        <Setter Property="Background" Value="{StaticResource CD_Grey}"/>
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Height" Value="52"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{StaticResource CD_Grey}" BorderThickness="1,1,1,1" Background="{TemplateBinding Background}">
                        <TextBlock Padding="0,12,0,0" Height="52" Text="{TemplateBinding Tag}" TextAlignment="Center" FontFamily="/Frontend;component/Resources/Fonts/#Roboto Lt"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource CD_LightBlueGrey}"/>
                <Setter Property="Foreground" Value="{StaticResource CD_DarkTeal}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource CD_DarkTeal}"/>
                <Setter Property="Foreground" Value="{StaticResource CD_White}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource CD_White}"/>
                <Setter Property="Foreground" Value="{StaticResource CD_Grey}"/>
            </Trigger>
            
        </Style.Triggers>
    </Style>
</ResourceDictionary>